swagger: "2.0"
info:
  version: "1.0.0"
  title: "API Todos"
host: "petstore.swagger.io"
tags:
  - name: "user"
    description: "Операции с пользователем"
schemes:
  - "http"
paths:
  /login:
    post:
      summary: "Вход в систему"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Данные для входа в систему"
          required: true
          schema:
            $ref: "#/definitions/Login"
      responses:
        200:
          description: "При верном адресе электронной почты и пароле, если пользователь активный то вернется токен, если пользователь активе то ответ будет пустым"
          schema:
            $ref: "#/definitions/Token"
        401:
          description: "Не верный адрес электронной почты и/или пароль "
  /user:
    post:
      tags:
        - "user"
      summary: "Новый пользователь"
      description: "Если пользователя не существует, то для него будет сгенерирован временный пароль и отправлен на электронную почту"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "New user"
          required: true
          schema:
            $ref: "#/definitions/NewUser"
      responses:
        200:
          description: "successful operation"
        400:
          description: "Пользователь существует"
    put:
      tags:
        - "user"
      summary: "Активация пользователя"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "New user"
          required: true
          schema:
            $ref: "#/definitions/ActivationUser"
      responses:
        200:
          description: "successful operation"
        401:
          description: "Пользователь не найден"
    get:
      tags:
        - "user"
      summary: "Получение списка пользователя"
      security:
        - BearerAuth: [user]
      parameters:
        - name: "query"
          in: "query"
          type: "string"
          description: "ID запрашиваемого пользователя"
        - name: "email"
          in: "query"
          type: "string"
          description: "Email запрашиваемого пользователя"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/User"
definitions:
  Login:
    type: "object"
    properties:
      email:
        type: "string"
      password:
        type: "string"
  Token:
    type: "object"
    properties:
      token:
        type: "string"
  NewUser:
    type: "object"
    properties:
      email:
        type: "string"
  ActivationUser:
    type: "object"
    properties:
      email:
        type: "string"
      old_password:
        type: "string"
      new_password:
        type: "string"
  User:
    type: "object"
    properties:
      id:
        type: "integer"
      email:
        type: "string"
    xml:
      name: "User"
